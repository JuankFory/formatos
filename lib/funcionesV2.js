function Standar(doc, data, saltos, margenIzq, setLargo) {

//
		console.log(data);
		
				
		//var margenIzq = 50;
		var margenSup = 30;

		var w = h =	2;

		var margVinet = 0;
		var margCaja = 0;
		var sumaMargen;
		var setAling;
		var varAling;
		//var setLargo = 0;

		var OkLC = "";
		var OkCF = "";
		var txtCF = "";
		var dataCF;
		
		//- LOGO
		
		/*var imgLog = jQ('.container-logo img').attr('src');
		jQ('.logo').attr('src',imgLog);
		//jQ('.container-logo img').attr('src','skins/Corbanco Nightfall/images/multired.png');
		jQ('.container-logo img').attr('id',"imgL");
		
		//console.log(imgLog);
		var res = imgLog.split("/");
		var nameLogo = res[res.length-1];
		//console.log(nameLogo);
		*/
		var cW = 0;
		var cH = 0;
				
		function getBase64Image(img) {
			var canvas = document.createElement("canvas");
			canvas.width = img.width;
			canvas.height = img.height;
			cW = canvas.width;
			cH = canvas.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = '#fff';
			ctx.fillRect(0, 0, canvas.width, canvas.height);
			ctx.drawImage(img, 0, 0);
			var dataURL = canvas.toDataURL("image/jpg");
			return dataURL;
		}
				
		//var logo = getBase64Image(document.getElementById("imgL"));
		var logo = "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";
		console.log(logo);
		
		var x = 2.84;
		//var doc = new jsPDF("p","mm",[278*x, 215*x]);
		
		//doc.addImage(logo, 'PNG', porct(margenIzq+5), porct(margenSup-5), porct(escala(cW,30)), porct(escala(cH,30)));
		
		//-
		
		
		
		function setFnt(dataArray){

			var setlet = dataArray.TIPLET.trim();
			var setSize = dataArray.LETTAM.trim();
			var setType = dataArray.TIPCMP.trim();

			var fontLet = "helvetica";
			var fontSty = "normal";


			doc.setTextColor(dataArray.COLLER.trim(),dataArray.COLLEV.trim(),dataArray.COLLEA.trim());	
			
			if (setlet.toLowerCase()=="arial") {
				doc.setFont('Helvetica');
			}else if (setlet.toLowerCase()=="courier") {
				doc.setFont('Courier');
			}else if (setlet.toLowerCase()=="times") {
				doc.setFont('Times');
			}

			if (setType.toUpperCase()=="TX") {
				fontSty = "normal";
			}else if (setType.toUpperCase()=="TB") {
				fontSty = "bold";
			}else if (setType.toUpperCase()=="TK") {
				fontSty = "italic";
			}else if (setType.toUpperCase()=="TBK") {
				fontSty = "bolditalic";
			}	

			doc.setFontSize(setSize);
			doc.setFont(fontLet, fontSty);	

		}
		
		function setCaja(dataArray,margenSupF){

			var setM = dataArray.TIPIMP.trim();
			var setFond = dataArray.RELLEN.trim();
			setLargo = parseInt(dataArray.TAMANO.trim());
			var setMargenF = dataArray.POSICX.trim();
			setLargo += 15;
			//setAling = "I";	
			
			if (setM.toUpperCase() == "M" || 
				setM.toUpperCase() == "M1" || 
				setM.toUpperCase() == "M2" || 
				setM.toUpperCase() == "M3" || 
				setM.toUpperCase() == "M4" || 
				setM.toUpperCase() == "M5" || 
				setM.toUpperCase() == "M6" || 
				setM.toUpperCase() == "M7" || 
				setM.toUpperCase() == "M8" || 
				setM.toUpperCase() == "M9" || 
				setM.toUpperCase() == "A1" || 
				setM.toUpperCase() == "A2" || 
				setM.toUpperCase() == "A3" || 
				setM.toUpperCase() == "A4" || 
				setM.toUpperCase() == "A5" ||
				setM.toUpperCase() == "A6" ||
				setM.toUpperCase() == "A7" ||
				setM.toUpperCase() == "A8" ||
				setM.toUpperCase() == "A9" ||
				setM.toUpperCase() == "B1") {

				doc.setTextColor(parseInt(dataArray.COLLER.trim()), parseInt(dataArray.COLLEV.trim()), parseInt(dataArray.COLLEA.trim()));
				margCaja = 7;
				doc.setLineWidth(porct(0.7));

				if (setFond.toUpperCase() == "N") {

					doc.setDrawColor(0, 0, 0);
					//doc.setDrawColor(parseInt(dataArray.FILLR.trim()), parseInt(dataArray.FILLV.trim()), parseInt(dataArray.FILLA.trim()));
					doc.setFillColor(255, 255, 255);

				} else if (setFond.toUpperCase() == "S") {

					doc.setDrawColor(Math.abs(parseInt(dataArray.COLFOR.trim())-30), Math.abs(parseInt(dataArray.COLFOV.trim())-30), Math.abs(parseInt(dataArray.COLFOA.trim())-30));
					doc.setFillColor(parseInt(dataArray.COLFOR.trim()), parseInt(dataArray.COLFOV.trim()), parseInt(dataArray.COLFOA.trim()));
  
				}else{
					doc.setDrawColor(0, 0, 0);
					doc.setFillColor(255, 255, 255); 
				}

				//doc.rect(porct(margenIzq+setMargenF), porct(margenSup+margenSupF-10), porct(setLargo), porct(15));

			}else{ 
				doc.setDrawColor(255, 255, 255);
				margCaja = 0;
			}

		}

		function setVinetas(dataArray,margenSupF){
			var setVine = dataArray.TIPIMP.trim();

			function putMarcX(x,y){
				var tamV2 = 1.8;
				doc.setLineWidth(porct(0.8));
				doc.line(porct(margenIzq+x+1.2), porct(margenSup+y-0.7), porct(margenIzq+x+1.2+tamV2*2), porct(margenSup+y-0.7-tamV2*2));	
				doc.line(porct(margenIzq+x+1.2), porct(margenSup+y-0.7-tamV2*2), porct(margenIzq+x+1.2+tamV2*2), porct(margenSup+y-0.7));	
			}
			function putMarcO(x,y){
				var tamV2 = 3;
				doc.setFillColor(50, 50, 50);
				doc.circle(porct(margenIzq+x), porct(margenSup+y-2.5), 0.9, 'F');	
			}

			if (setVine.toUpperCase() == "V") {
				margVinet = 7;
				setLargo -= margVinet;
				doc.setFillColor(0, 0, 0); 
				doc.rect(porct(margenIzq+2), porct(margenSup+margenSupF-4-posX-posX2), porct(w), porct(h),'F');
			}else if(setVine.toUpperCase() == "V1") {
				margVinet = 11;
				setLargo -= margVinet;
				doc.setDrawColor(0, 0, 0);
				doc.setFillColor(255, 255, 255);
				doc.rect(porct(margenIzq+2), porct(margenSup+margenSupF-5.4-posX-posX2), porct(w*3), porct(h*3),'FD');
			}else if(setVine.toUpperCase() == "V2") {
				margVinet = 11;
				setLargo -= margVinet;
				doc.setDrawColor(0, 0, 0);
				doc.setFillColor(255, 255, 255);				
				doc.rect(porct(margenIzq+2), porct(margenSup+margenSupF-5.4-posX-posX2), porct(w*3), porct(h*3),'FD');
				putMarcX(2, margenSupF-posX-posX2);
			}else if(setVine.toUpperCase() == "V3") {
				margVinet = 11;
				setLargo -= margVinet;
				doc.setDrawColor(0, 0, 0);
				doc.setFillColor(255, 255, 255);        
				doc.circle(porct(margenIzq+4), porct(margenSup+margenSupF-2.5-posX-posX2), 1.3, 'FD');			
			}else if(setVine.toUpperCase() == "V4") {
				margVinet = 11;
				setLargo -= margVinet;
				doc.setDrawColor(0, 0, 0);
				doc.setFillColor(255, 255, 255);
				doc.circle(porct(margenIzq+4), porct(margenSup+margenSupF-2.5-posX-posX2), 1.3, 'FD');	
				putMarcO(4, margenSupF-posX-posX2);		
			}else{
				margVinet = 0;
			}

		}

		function setAll(dataArray,margenSupF){

			setFnt(dataArray);
			setCaja(dataArray,margenSupF);
			setVinetas(dataArray,margenSupF);
			//sumaMargen = parseInt(margVinet+margCaja+dataArray.POSX.trim());	

		}

		function piePImg(){

			var cossec = "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WgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP////////////////////////////8D6AAAAAD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0cAAAAGAAAAAAAAAAAAAABJAAAAlQAAAAkAQwBMAEEAUgBJAFQAQQAtADEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAJUAAABJAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAABudWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAABJAAAAAFJnaHRsb25nAAAAlQAAAAZzbGljZXNWbExzAAAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91cElEbG9uZwAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRlZAAAAABUeXBlZW51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAASQAAAABSZ2h0bG9uZwAAAJUAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABNc2dlVEVYVAAAAAEAAAAAAAZhbHRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEAAAAIY2VsbFRleHRURVhUAAAAAQAAAAAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduAAAAB2RlZmF1bHQAAAAJdmVydEFsaWduZW51bQAAAA9FU2xpY2VWZXJ0QWxpZ24A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AG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAOEJJTQQGAAAAAAAHAAgBAQABAQD/4Q2oaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQzNDIsIDIwMTAvMDEvMTAtMTg6MDY6NDMgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxNC0wNC0wMVQxNDo1OToxOC0wNTowMCIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1ICgxMi4weDIwMTAwMTE1IFsyMDEwMDExNS5tLjk5OCAyMDEwLzAxLzE1OjAyOjAwOjAwIGN1dG9mZjsgbSBicmFuY2hdKSAgV2luZG93cyIgeG1wOkNyZWF0ZURhdGU9IjIwMTQtMDMtMzFUMjE6MjM6MDktMDU6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMTQtMDQtMDFUMTQ6NTk6MTgtMDU6MDAiIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxNDYyMzI1RDRCOUUzMTFCQTk1RkE5MTQ3NzUyQUI1IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjgxNDYyMzI1RDRCOUUzMTFCQTk1RkE5MTQ3NzUyQUI1IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ODE0NjIzMjVENEI5RTMxMUJBOTVGQTkxNDc3NTJBQjUiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4MTQ2MjMyNUQ0QjlFMzExQkE5NUZBOTE0Nzc1MkFCNSIgc3RFdnQ6d2hlbj0iMjAxNC0wNC0wMVQxNDo1OToxOC0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSAoMTIuMHgyMDEwMDExNSBbMjAxMDAxMTUubS45OTggMjAxMC8wMS8xNTowMjowMDowMCBjdXRvZmY7IG0gYnJhbmNoXSkgIFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9InciPz7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABh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";
			doc.addImage(cossec, 'PNG', porct(margenIzq+300), porct(margenSup+500), porct(74.5), porct(36.5));

		}	

		function piePCod(txtCF,dataArray){
			
			setAll(dataArray,530);
			doc.setFontType("normal");
			doc.text(txtCF, porct(margenIzq+margVinet+margCaja), porct(margenSup+530),{maxWidth: porct(setLargo-5), align: "left"});
		
		}

		var contSaltoCajas = 0;

		function saltoCajas(dataArray, LmitW, divideW) {

			var contenedorXF = [];
			var cantiXF = 1;

			var canti = Math.floor(doc.getStringUnitWidth(dataArray.CONTEN.trim())+4)/((LmitW)/divideW);
			//var canti = Math.floor(doc.getStringUnitWidth(dataArray.CONT.trim()))/(25.610000000000014);
			//var canti = Math.floor(doc.getStringUnitWidth(dataArray.CONT.trim()))/((LmitW));
			canti += 1;	
			/*for (var x = 0; x < dataArray.CONT.trim().length; x++) {
				contenedorXF[x] = dataArray.CONT.charAt(x);
				var textoXF = doc.getTextWidth(contenedorXF.join(''));	
				
				if (textoXF >= LmitW) {						
					contenedorXF = [];
					cantiXF++;						
					textoXF -= textoXF;					
				}
			}*/
			//alert(canti);
			//alert(doc.getStringUnitWidth(dataArray.CONT.trim()));
			return Math.floor(canti);
			
			//console.log(cantiXF);

		}

		////**************************************************************************************************************************************************////
		////************************************************************ FUNCIONES DE ESTRUCTURAS ************************************************************////
		////**************************************************************************************************************************************************////

		function structureM1(dataArrayM1, saltosIn, m1){

			setAll(dataArrayM1[i],saltosIn);
			doc.rect(porct(margenIzq+185.5-120), porct(margenSup+saltosIn-10), porct(120), porct(15),'FD');
			doc.text(m1[0].trim(), porct(margenIzq+185.5-120+(120/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(120-2), align: "center"});

			setAll(dataArrayM1[i],saltosIn);
			doc.rect(porct(margenIzq+185.5), porct(margenSup+saltosIn-10), porct(120), porct(15),'FD');
			doc.text(m1[1].trim(), porct(margenIzq+185.5+(120/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(120-2), align: "center"});
			saltos +=15;

		}

		function structureM2(dataArrayM2, saltosIn, m2){

			setAll(dataArrayM2[i],saltosIn);
			doc.rect(porct(margenIzq+3), porct(margenSup+saltosIn-10), porct(311), porct(15));	
			doc.text(m2[0].trim(), porct(margenIzq+margVinet+margCaja), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "justify"});

			setAll(dataArrayM2[i],saltosIn);
			doc.rect(porct(margenIzq+315), porct(margenSup+saltosIn-10), porct(51), porct(15));	
			doc.text(m2[1].trim(), porct(margenIzq+360), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "right"});	
			saltos +=15;

		}

		function structureM3(dataArrayM3, saltosIn, m3){

			var tam = 7;
			setAll(dataArrayM3[i],saltosIn);
			doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-9), porct(setLargo), porct(13),'F');
			doc.text(m3[0].trim(), porct(margenIzq+margVinet+margCaja), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
			doc.text(m3[1].trim(), porct(margenIzq+margVinet+margCaja+295), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "right"});
			doc.text(m3[2].trim(), porct(margenIzq+margVinet+margCaja+327), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "right"});

			doc.setDrawColor(0, 0, 0);
			doc.setFillColor(255, 255, 255);
			doc.rect(porct(margenIzq+margVinet+margCaja+300), porct((margenSup+saltosIn-posX-posX2-6)), porct(tam), porct(tam), 'FD');
			doc.rect(porct(margenIzq+margVinet+margCaja+332), porct((margenSup+saltosIn-posX-posX2-6)), porct(tam), porct(tam), 'FD');
			saltos +=15;

		}

		function structureM4(dataArrayM4, saltosIn, m4){

			if(m4.length < 2){
				setAll(dataArrayM4[i],saltosIn);
				doc.text(m4[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15;
			}else{
				setAll(dataArrayM4[i],saltosIn);
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/5.34), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4)+(setLargo/5.34)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/5.34), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4)+(setLargo/5.34)+(setLargo/5.34)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/5.34), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4)+(setLargo/5.34)+(setLargo/5.34)+(setLargo/5.34)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/5.34), porct(15), 'FD');

				doc.text(m4[0].trim(), porct(margenIzq+((setLargo/4)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4)-2), align: "center"});
				doc.text(m4[1].trim(), porct(margenIzq+(setLargo/4)+((setLargo/5.34)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.34)-2), align: "center"});
				doc.text(m4[2].trim(), porct(margenIzq+(setLargo/4)+(setLargo/5.34)+((setLargo/5.34)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.34)-2), align: "center"});
				doc.text(m4[3].trim(), porct(margenIzq+(setLargo/4)+(setLargo/5.34)+(setLargo/5.34)+((setLargo/5.34)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.34)-2), align: "center"});
				doc.text(m4[4].trim(), porct(margenIzq+(setLargo/4)+(setLargo/5.34)+(setLargo/5.34)+(setLargo/5.34)+((setLargo/5.34)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.34)-2), align: "center"});
				saltos +=15;
			}

		}

		function structureM5(dataArrayM5, saltosIn, m5){

			if(m5.length < 2){
				setAll(dataArrayM5[i],saltosIn);
				doc.text(m5[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15;
			}else{
				setAll(dataArrayM5[i],saltosIn);
				doc.rect(porct(margenIzq+margVinet+(setLargo/28)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/2.1), porct(15), 'FD');
				doc.rect(porct(margenIzq+margVinet+(setLargo/28)+(setLargo/2.1)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4.4), porct(15), 'FD');
				doc.rect(porct(margenIzq+margVinet+(setLargo/28)+(setLargo/2.1)+(setLargo/4.4)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4.4), porct(15), 'FD');
				doc.text(m5[0].trim(), porct(margenIzq+(setLargo/28)+5), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/2.1)-5), align: "left"});
				doc.text(m5[1].trim(), porct(margenIzq+(setLargo/28)+(setLargo/2.1)+(setLargo/4.4)/2), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4.4)-3), align: "center"});
				doc.text(m5[2].trim(), porct(margenIzq+(setLargo/28)+(setLargo/2.1)+(setLargo/4.4)+(setLargo/4.4)/2), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4.4)-3), align: "center"});
				saltos +=15;
			}

		}

		function structureM6(saltosIn, m6){

			doc.text(m6[0].trim(), porct(margenIzq+margVinet), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
			doc.setLineWidth(porct(0.7));
			doc.line(porct(margenIzq+margVinet)+doc.getTextWidth(m6[0].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(setLargo/2), porct(margenSup+saltosIn-posX-posX2));	
			saltos += 55;
			saltosIn += 55;

			var setLargoM6 = setLargo*1.137;
			doc.text(m6[1].trim(), porct(margenIzq+margVinet), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM6), align: "left"});
			doc.line(porct(margenIzq+margVinet)+doc.getTextWidth(m6[1].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(20+setLargoM6/3), porct(margenSup+saltosIn-posX-posX2));
			doc.text(m6[2].trim(), porct(margenIzq+margVinet-20+setLargoM6/3), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM6/3), align: "left"});
			doc.line(porct(margenIzq+margVinet-20+setLargoM6/3)+doc.getTextWidth(m6[2].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(setLargoM6/3+setLargoM6/3), porct(margenSup+saltosIn-posX-posX2));
			doc.text(m6[3].trim(), porct(margenIzq+margVinet-40+setLargoM6/3+setLargoM6/3), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM6/3), align: "left"});
			doc.line(porct(margenIzq+margVinet-40+setLargoM6/3+setLargoM6/3)+doc.getTextWidth(m6[3].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(setLargoM6/3+setLargoM6/3+setLargoM6/3), porct(margenSup+saltosIn-posX-posX2));
			saltos += 20;

		}

		function structureM7(saltosIn, m7){

			var setLargoM7 = setLargo*1.137;

			doc.text(m7[0].trim(), porct(margenIzq+margVinet), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM7), align: "left"});
			doc.line(porct(margenIzq+margVinet)+doc.getTextWidth(m7[0].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(10+setLargoM7/2), porct(margenSup+saltosIn-posX-posX2));
			doc.text(m7[1].trim(), porct(margenIzq+margVinet-10+setLargoM7/2), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM7/2), align: "left"});
			doc.line(porct(margenIzq+margVinet-10+setLargoM7/2)+doc.getTextWidth(m7[1].trim())+2, porct(margenSup+saltosIn-posX-posX2), porct(setLargoM7/2+setLargoM7/2), porct(margenSup+saltosIn-posX-posX2));
			saltos +=15;

		}

		function structureM8(saltosIn, m8){

			var setLargoM8 = setLargo*1.137;

			doc.text(m8[0].trim(), porct(margenIzq+margVinet+50), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM8), align: "left"});
			doc.text(m8[1].trim(), porct(margenIzq+margVinet+345), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargoM8), align: "right"});
			saltos +=15;

		}

		function structureM9(dataArrayM9, saltosIn, m9){

			if(m9.length < 2){
				setAll(dataArrayM9[i],saltosIn);
				doc.text(m9[0].trim(), porct(margenIzq+margVinet+5), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				saltos +=15;
			}else{
				setAll(dataArrayM9[i],saltosIn);	
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-8.5), porct(setLargo/2.3), porct(12), 'FD');
				doc.rect(porct(margenIzq+setLargo/2.3), porct(margenSup+saltosIn-posX-posX2-8.5), porct(setLargo/4.6), porct(12), 'FD');
				doc.rect(porct(margenIzq+setLargo/2.3+setLargo/4.6), porct(margenSup+saltosIn-posX-posX2-8.5), porct(setLargo/5.1), porct(12), 'FD');
				doc.rect(porct(margenIzq+setLargo/2.3+setLargo/4.6+setLargo/5.1), porct(margenSup+saltosIn-posX-posX2-8.5), porct(setLargo/6.6), porct(12), 'FD');

				doc.text(m9[0].trim(), porct(margenIzq)+2, porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/2.4)-2), align: "left"});
				doc.text(m9[1].trim(), porct(margenIzq+setLargo/2.3+((setLargo/4.6)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4.6)-2), align: "center"});
				doc.text(m9[2].trim(), porct(margenIzq+setLargo/2.3+(setLargo/4.6)+((setLargo/5.1)-5)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.1)-5), align: "right"});
				doc.text(m9[3].trim(), porct(margenIzq+setLargo/2.3+(setLargo/4.6)+(setLargo/5.1)+((setLargo/6.6)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/6.6)-2), align: "center"});		
				saltos +=12;
			}

		}

		function structureA1(dataArrayA1, saltosIn, a1){

			if(a1.length < 2){
				setAll(dataArrayA1[i],saltosIn);
				doc.text(a1[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15;
			}else{
				setAll(dataArrayA1[i],saltosIn);
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/2+30), porct(15), 'FD');
				doc.rect(porct(margenIzq+setLargo/2+30), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/2-30), porct(15), 'FD');

				doc.text(a1[0].trim(), porct(margenIzq+margCaja), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo-margCaja), align: "left"});
				doc.text(a1[1].trim(), porct(margenIzq+setLargo/2+30+(setLargo/2-30)/2), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo-margCaja), align: "center"});
				saltos +=15;
			}

		}

		function structureA2(dataArrayA2, saltosIn, a2){

			if(a2.length < 2){
				setAll(dataArrayA2[i],saltosIn);
				doc.text(a2[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15;
			}else{
				var tamA2 = 6.13;
				setAll(dataArrayA2[i],saltosIn);							
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/5.43), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/5.43)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/tamA2), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/tamA2), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/tamA2), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/tamA2), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/tamA2), porct(15), 'FD');

				doc.text(a2[0].trim(), porct(margenIzq+((setLargo/5.43)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5.43)-2), align: "center"});
				doc.text(a2[1].trim(), porct(margenIzq+(setLargo/5.43)+((setLargo/tamA2)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/tamA2)-2), align: "center"});
				doc.text(a2[2].trim(), porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+((setLargo/tamA2)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/tamA2)-2), align: "center"});
				doc.text(a2[3].trim(), porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)+((setLargo/tamA2)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/tamA2)-2), align: "center"});
				doc.text(a2[4].trim(), porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)+((setLargo/tamA2)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/tamA2)-2), align: "center"});
				doc.text(a2[5].trim(), porct(margenIzq+(setLargo/5.43)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)+(setLargo/tamA2)+((setLargo/tamA2)/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/tamA2)-2), align: "center"});
				saltos +=15;
			}

		}

		function structureA3(dataArrayA3, saltosIn, a3){

			if (a3[0].trim() == "$$L$$") {	
				doc.setDrawColor(0, 0, 0);
				doc.line(porct(margenIzq+5), porct(margenSup+saltosIn-posX-posX2), porct(163), porct(margenSup+saltosIn-posX-posX2));	
			}else{
				setAll(dataArrayA3[i],saltosIn);
				doc.text(a3[0].trim(), porct(margenIzq+(porct(setLargo/3))), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/3)-15), align: "center"});	
			}

			if (a3[1].trim() == "$$L$$") {
				doc.setDrawColor(0, 0, 0);					
				doc.line(porct(margenIzq+123), porct(margenSup+saltosIn-posX-posX2), porct(120+162), porct(margenSup+saltosIn-posX-posX2));	
			}else{
				setAll(dataArrayA3[i],saltosIn);
				doc.text(a3[1].trim(), porct(margenIzq)+porct(setLargo/3)+(porct(setLargo/3)/2)-1, porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/3)-15), align: "center"});
			}

			if (a3[2].trim() == "$$L$$") {	
				doc.setDrawColor(0, 0, 0);
				doc.line(porct(margenIzq+242), porct(margenSup+saltosIn-posX-posX2), porct(400), porct(margenSup+saltosIn-posX-posX2));	
			}else{
				setAll(dataArrayA3[i],saltosIn);
				doc.text(a3[2].trim(), porct(margenIzq)+porct(setLargo/3)+porct(setLargo/3)+(porct(setLargo/3)/2)-2, porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/3)-15), align: "center"});
			}
			saltos +=15;

		}

		function structureA4(dataArrayA4, saltosIn, a4){

			if (setLargo < 40){ setLargo = 40 }

			if (a4[0].trim() == "$$L$$") {					
				doc.setDrawColor(0, 0, 0);
				doc.line(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq-5+setLargo/2), porct(margenSup+saltosIn-posX-posX2));	
			} else {
				setAll(dataArrayA4[i],saltosIn);
				doc.text(a4[0].trim(), porct(margenIzq), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo/2), align: "left"});
			}

			if (a4[1].trim() == "$$L$$") {
				doc.setDrawColor(0, 0, 0);
				doc.line(porct(margenIzq+setLargo/2), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+setLargo), porct(margenSup+saltosIn-posX-posX2));	
			} else {
				setAll(dataArrayA4[i],saltosIn);
				doc.text(a4[1].trim(), porct(margenIzq+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo/2), align: "left"});
			}
			saltos +=12;

		}

		function structureA5(dataArrayA5, saltosIn, a5){

			if (setLargo < 40){ setLargo = 40 }

			if(a5.length < 2){
				setAll(dataArrayA5[i],saltosIn);
				doc.text(a5[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15*data[i].LETTAM*0.11;;
			}else{

				setAll(dataArrayA5[i],saltosIn);

				if (a5[0].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/4)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a5[0].trim(), porct(margenIzq), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4)-2), align: "left"});
				}

				if (a5[1].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/4)+(setLargo/4)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a5[1].trim(), porct(margenIzq+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4)-2), align: "left"});
				}

				if (a5[2].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/4)+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/4)+(setLargo/4)+(setLargo/4)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a5[2].trim(), porct(margenIzq+(setLargo/4)+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4)-2), align: "left"});
				}

				if (a5[3].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/4)+(setLargo/4)+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/4)+(setLargo/4)+(setLargo/4)+(setLargo/4)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a5[3].trim(), porct(margenIzq+(setLargo/4)+(setLargo/4)+(setLargo/4)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/4)-2), align: "left"});
				}

				saltos +=15*dataArrayA5[i].LETTAM*0.11;
			}

		}

		function structureA6(dataArrayA6, saltosIn, a6){

			setAll(dataArrayA6[i],saltosIn);

				if(a6.length < 2){	

					doc.text(a6[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
					saltos +=15;
				
				}else{
					
					var tamCajaW = 7;
					var comp = setLargo/tamCajaW;
					var maxValArr = 0;

					for (var xx = 0; xx < a6.length; xx++) {
						
						var divVar = porct(setLargo/tamCajaW)/4.78;
						var cantiCF = Math.floor(doc.getStringUnitWidth(a6[xx].trim()))/divVar;
						cantiCF += 1;	

						arrLine[xx] = Math.floor(cantiCF);
						
						var arrMax = arrLine[xx];
						if(maxValArr < arrMax){
					        maxValArr = arrMax;
					    }

						if (xx == a6.length-1) {
							if (maxValArr > 1) {

								for (var z = 0; z < 7; z++) {
									setAll(dataArrayA6[i],saltosIn);
									doc.rect(porct(margenIzq+(comp)*z), porct(margenSup+saltosIn-posX-posX2-10), porct(comp), porct(15*maxValArr*0.73*dataArrayA6[i].LETTAM*0.11), 'FD');
									doc.text(a6[z].trim(), porct(margenIzq+(comp)*z+(comp/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(comp-4), align: "center"});
								}

								saltos +=15*maxValArr*0.73*dataArrayA6[i].LETTAM*0.11;

							} else {

								for (var z = 0; z < 7; z++) {
									setAll(dataArrayA6[i],saltosIn);	
									doc.rect(porct(margenIzq+(comp)*z), porct(margenSup+saltosIn-posX-posX2-10), porct(comp), porct(15), 'FD');
									doc.text(a6[z].trim(), porct(margenIzq+(comp)*z+(comp/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(comp-4), align: "center"});
								}

								saltos +=15;

							}
						}
					}
				}

		}

		function structureA7(dataArrayA7, saltosIn, a7){

			if (setLargo < 40){ setLargo = 40 }

			if(a7.length < 2){
				setAll(dataArrayA7[i],saltosIn);
				doc.text(a7[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15*dataArrayA7[i].LETTAM*0.11;;
			}else{

				setAll(dataArrayA7[i],saltosIn);

				if (a7[0].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/5)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a7[0].trim(), porct(margenIzq), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5)-2), align: "left"});
				}

				if (a7[1].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/5)+(setLargo/5)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a7[1].trim(), porct(margenIzq+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5)-2), align: "left"});
				}

				if (a7[2].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a7[2].trim(), porct(margenIzq+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5)-2), align: "left"});
				}

				if (a7[3].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)+(setLargo/5)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a7[3].trim(), porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5)-2), align: "left"});
				}

				if (a7[4].trim() == "$$L$$") {
					doc.setDrawColor(0, 0, 0);
					doc.line(porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2), porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)+(setLargo/5)+(setLargo/5)-5), porct(margenSup+saltosIn-posX-posX2));
				} else {
					doc.text(a7[4].trim(), porct(margenIzq+(setLargo/5)+(setLargo/5)+(setLargo/5)+(setLargo/5)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct((setLargo/5)-2), align: "left"});
				}

				saltos +=15*dataArrayA7[i].LETTAM*0.11;
			}

		}

		function structureA8(dataArrayA8, saltosIn){

			var setLargoA8 = parseInt(dataArrayA8[i].TAMANO);
			if (setLargoA8 < 40){ setLargoA8 = 40 }

			var a8 = dataArrayA8[i].CONTEN.split("$$");
			var altoA8 = a8[1];

			if(altoA8*15*dataArrayA8[i].LETTAM*0.11 > 235){

				while(altoA8*15*dataArrayA8[i].LETTAM*0.11 > 235 ){
					altoA8--;						
				}	

			}

			doc.setDrawColor(0, 0, 0);
			doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2), porct(setLargoA8), porct(15*altoA8));

			saltos += altoA8*15.5*dataArrayA8[i].LETTAM*0.11;

		}

		function structureA9(dataArrayA9, saltosIn, a9){

			if(a9.length < 2){
				setAll(dataArrayA9[i],saltosIn);
				doc.text(a9[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15*dataArrayA9[i].LETTAM*0.11;
			}else{
				setAll(dataArrayA9[i],saltosIn);
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4-30), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4-30)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4+30), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4-30), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4-30)+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4+30), porct(15), 'FD');

				doc.text(a9[0].trim(), porct(margenIzq+margCaja+margVinet), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				doc.text(a9[1].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/4-30)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				doc.text(a9[2].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				doc.text(a9[3].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/4-30)+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				saltos +=15*dataArrayA9[i].LETTAM*0.11;
			}

		}

		function structureB1(dataArrayB1, saltosIn, b1){

			if(b1.length < 2){
				setAll(dataArrayB1[i],saltosIn);
				doc.text(b1[0].trim(), porct(margenIzq+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "center"});
				saltos +=15*dataArrayB1[i].LETTAM*0.11;
			}else{

				setAll(dataArrayB1[i],saltosIn);
				doc.rect(porct(margenIzq), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4-30), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4-30), porct(15), 'FD');
				doc.text(b1[0].trim(), porct(margenIzq+margCaja+margVinet), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				doc.text(b1[2].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});

				doc.setDrawColor(0, 0, 0);
				doc.setFillColor(255, 255, 255);
				doc.setTextColor(0, 0, 0)
				doc.rect(porct(margenIzq+(setLargo/4-30)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4+30), porct(15), 'FD');
				doc.rect(porct(margenIzq+(setLargo/4-30)+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2-10), porct(setLargo/4+30), porct(15), 'FD');
				doc.text(b1[1].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/4-30)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				doc.text(b1[3].trim(), porct(margenIzq+margCaja+margVinet+(setLargo/4-30)+(setLargo/2)), porct(margenSup+saltosIn-posX-posX2),{maxWidth: porct(setLargo), align: "left"});
				saltos +=15*dataArrayB1[i].LETTAM*0.11;
			}

		}




		//var saltos = 60;
		var cont = 0;
		var posX = 0;
		var posX2 = 0;

		var contM1 = 0;
		var contM2 = 0;
		var contM3 = 0;
		var contM4 = 0;
		var contM5 = 0;
		var contM6 = 0;
		var contM7 = 0;
		var contM8 = 0;
		var contM9 = 0;
		var contA3 = 0;
		var contA4 = 0;
		var contA5 = 0;
		var contA6 = 0;
		var contA7 = 0;
		var contA8 = 0;
		var contA9 = 0;
		var contB1 = 0;


		var validUlt = 0;

		var restaUltimoSalto = 1;
		var tienePtxt = 0;
		var tienePimg = 0;

		/*
		TAMLET 	=	LETTAM
		CONT 	=	CONTEN
		FORMA 	=	TIPIMP
		TIPO 	= 	TIPCMP
		*/

		
		var p = 0;
		//console.log(data[0].CONT);



		// ======== PIE DE PÁGINA ========

		for (var m = 0; m < data.length; m++){
						
			if (data[m].TIPCMP.trim()=="LC") {
				tienePimg = 1;
				restaUltimoSalto++;
			 	piePImg(); 
			}  

			if (data[m].TIPCMP.trim()=="CF") {
				tienePtxt = 1;
				restaUltimoSalto++;  
				dataCF = data[m];
				txtCF = data[m].CONTEN.trim(); 
				piePCod(txtCF, dataCF);
			}
			
		}


		// ======== NEW ========

		
		
		// ======== APLICAR FOR ========


		for (var i = p; i < data.length; i++) {

			//pieP(data[i]);
			setAll(data[i],saltos);

			var t1 = data[i].CONTEN.split("&%");

			if (data[i].TIPIMP == "M1") {

				contM1 ++;
				contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;	contM6 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;
				
				if (contM1 == 1) { saltos +=7; }

				structureM1(data, saltos, t1);			

			} else if (data[i].TIPIMP == "M2") {

				contM2 ++;
				contM1 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;	contM6 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;


				if (contM2 == 1) { saltos +=5; }
				
				structureM2(data, saltos, t1);

			} else if (data[i].TIPIMP == "M3") {

				contM3 ++;
				contM1 = 0;	contM2 = 0;	contM4 = 0;	contM5 = 0;	contM6 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM3 == 1) { saltos +=7; }

				structureM3(data, saltos, t1);

			} else if (data[i].TIPIMP == "M4") {

				contM4 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM5 = 0;	contM6 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM4 == 1) { saltos +=7; }

				structureM4(data, saltos, t1);
				
			} else if (data[i].TIPIMP == "M5") {

				contM5 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM6 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM5 == 1) { saltos +=7; }

				structureM5(data, saltos, t1);				

			} else if (data[i].TIPIMP == "M6") {

				contM6 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM6 == 1) { saltos +=30; }

				structureM6(saltos, t1);

			} else if (data[i].TIPIMP == "M7") {

				contM7 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM7 == 1) { saltos +=20; }

				structureM7(saltos, t1);

			} else if (data[i].TIPIMP == "M8") {

				contM8 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM9 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM8 == 1) { saltos +=20; }

				structureM8(saltos, t1);

			} else if (data[i].TIPIMP == "M9") {

				contM9 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contA1 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contM9 == 1) { saltos +=9; }

				structureM9(data, saltos, t1);

			} else if (data[i].TIPIMP == "A1") {

				contA1 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA2 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA1 == 1) { saltos +=7; }

				structureA1(data, saltos, t1);

			} else if (data[i].TIPIMP == "A2") {

				contA2 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA2 == 1) { saltos +=7; }

				structureA2(data, saltos, t1);

			} else if (data[i].TIPIMP == "A3") {

				contA3 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA3 == 1) { saltos +=9; }

				structureA3(data, saltos, t1);

			} else if (data[i].TIPIMP == "A4") {

				contA4 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA5 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA4 == 1) { saltos +=9; }
				
				structureA4(data, saltos, t1);				

			} else if (data[i].TIPIMP == "A5") {

				contA5 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA6 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA5 == 1) { saltos +=9; }
				structureA5	(data, saltos, t1);

			} else if (data[i].TIPIMP == "A6") {

				contA6 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA5 = 0;	contA7 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				var arrLine = new Array(); 

				if (contA6 == 1) { saltos +=7; }
				structureA6(data, saltos, t1);				

			} else if (data[i].TIPIMP == "A7") {

				contA7 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;
				contA8 = 0;	contA9 = 0; contB1 = 0;

				if (contA7 == 1) { saltos +=9; }
				structureA7(data, saltos, t1);

			} else if (data[i].TIPIMP == "A8") {

				contA8 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;
				contA7 = 0;	contA9 = 0; contB1 = 0;

				if (contA8 == 1) { saltos +=10; }
				structureA8(data, saltos);
				
				
			} else if (data[i].TIPIMP == "A9") {

				contA9 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;
				contA7 = 0;	contA8 = 0; contB1 = 0;

				if (contA9 == 1) { saltos +=10; }
				structureA9(data, saltos, t1);
				
			} else if (data[i].TIPIMP == "B1") {

				contB1 ++;
				contM1 = 0;	contM2 = 0;	contM3 = 0;	contM4 = 0;	contM5 = 0;
				contM6 = 0;	contM7 = 0;	contM8 = 0;	contM9 = 0;	contA1 = 0;
				contA2 = 0;	contA3 = 0;	contA4 = 0;	contA5 = 0;	contA6 = 0;
				contA7 = 0;	contA8 = 0; contA9 = 0;

				if (contB1 == 1) { saltos +=10; }
				structureB1(data, saltos, t1);
				
			} else if (data[i].TIPCMP == "L"){

				doc.setDrawColor(0,0,0);
				doc.setLineWidth(porct(0.7));
				doc.text(data[i].CONTEN.trim(), porct(margenIzq+margVinet+margCaja), porct(margenSup+saltos-posX-posX2),{maxWidth: porct(setLargo-5), align: "left"});
				doc.line(porct(margenIzq), porct(margenSup+saltos-posX-posX2), porct(margenIzq+parseInt(data[i].TAMANO)), porct(margenSup+saltos-posX-posX2));//420
				saltos += 10;

			} else if (data[i].TIPCMP == "CT"){

				/////  IMAGEN DE TIJERA


				saltos += 3;

				var imgC = "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAEZElEQVR4nO3ZW4iUZRjA8d/srO6qaJrHohTXzoadsDN1kRRFB7Iggw50UdRldREUUVfdBdltkRRCEUVBGNmRipDMuiplI0shwSzddd1yddfZLp7vY8ZxdtvRmd1Ze//wMod99/ve5/me85BIJBKJRCKRSCT+jxQm+gDHQRHTxNkHMXAiF5ssCiigA7MxH+dmn/9AN/bhHwxP1AGbSRtm4Sa8jwNC0Hx14wHMMXkeaF0sxNPiKQ+PsEp4RljHScWpeB79RhY+X4dxB6bXc4Ni487aFO7GIzhdmHcJu/EWPsu+n5PtLWIKvsdf437SJrAEr4gnOywi/ibcgHnCOi4Wwa+U7fkd107EYZvBzfhS2cS34WF0Vuxpx+dCObmSbhOWMCbaGnTYZtAlTJwQbjs+dHTeH8IeYQGEQjrUIVcrK2A2ZmbvDwu/3l1j32JlOQ7jb6GYMdF+AgecCCoLnSKW43zlYL4L+3FkrBdsZQvYh77s/RThDhdkn9uxDE8KS8kLoE3qzACtnAZnYwWWCgGniZQ3C5finmxNzfb3YC1+wKHxPmwzOA0volc5E/SL0vdX5dSXF0HrROo8qcrhG0XkzxudWmsInwqrmFr7MpOXTjyIrUZWwHe4Rm3h20S8GNHVWz0LDIjqbpeI9pXkZfFT+FY59c0UsWJmtjqFi+wXQXWvsKhJQaeI9JVxIO/+evFEtq+AGTgD92K9iBOHsv0D+AWviUpxrkkSKy4RjU+12R/Ex0JB04RA9+Mbo8eLYWEBL+OUcZTjuHkUvzlWiF24HlfjBewQLvBfLXNlNlk3fmLURwELxARog9rDj4PCp0cTsg+b8Z4okKrd6ABWT6QfFESxsxzniDlfvuYJ8+5Qu7MbrrhGNQN4VTzh7aIsbhet8+O4Pds3iI3jkQWKonfvwlk4O1tdWKQs5NSK1zajB6nR/rZeKGCrEDJnk5gWXZ7dt4iVzVBAO1biKpwnqrMF2c07lQNXpzr69jrYgp2OFp7ICD3KKbCAQqMVMB2PidncEpGHZwhBx8vdukSE7636fqEImouyz0ews9EKuFXk4RUa/3Tz9LdbdHx7s9dSds+8ErxLCPeRyA5F4XqrRA2QD00HsaGRCpiDNcLsj0f4IRHZO4SLVJevf2Kj+G2gv2INiyB6mVBCF+7DlUJJbWJcvkw0WITw2/B2IxVwES4UJl9NXo3tF6ZZuXoq3g/goew61f+/XUT2L2pc/yU8KzLIFJyZrVoMio5yLbobqYDFYojxk8jBfSLX9gnB8zWSAg4Iwdc4dlDTI4LblhHu/YFIqatxhYgB1TGnlJ1vM97FOyg1UgHdotYeym5UuXqNrQG5RTy5agX8jE+EkmpxEK+LqnGVmBzNF/6eFz178KOwoK9kY7NWagjm4k1cJ+JATj/ewHPGNu7qFHXGUhGXSiJ+7BBuVJ0eW4Y71a77t4jRV1NolXlAQfyiM+jo0XcJX4suL5FIJBKJRCKRSCQSiUQikUicOP8CpbpOrEvWe5cAAAAASUVORK5CYII=";
				
				doc.addImage(imgC, 'PNG', porct(margenIzq+setLargo*0.95), porct(margenSup+saltos-posX-posX2-9), porct(12), porct(12));

				doc.setDrawColor(0,0,0);
				doc.setLineWidth(porct(0.7));
				var setLargoCT = 0;
				setLargoCT = setLargo/6;

				for (var h = 0; h < setLargoCT; h += 0.5) {
					doc.line(porct(margenIzq+(6*h)), porct(margenSup+saltos-posX-posX2), porct(margenIzq+2+(6*h)), porct(margenSup+saltos-posX-posX2));
				}

				saltos += 10;

			} else if (data[i].TIPCMP == "FV"){

				/////  FIRMA VELEZ

				saltos += 3;

				var imgF = "";
				
				doc.addImage(imgF, 'PNG', porct(margenIzq), porct(margenSup+saltos-posX-posX2-9), porct(80), porct(45));

				saltos += 40;

			} else if (data[i].TIPCMP.trim()=="LC" || data[i].TIPCMP.trim()=="CF") {

				console.log("img o cod");
				
			} else {

				if (data[i].TIPCMP.toUpperCase().trim()=="TB" || data[i].TIPCMP.toUpperCase().trim()=="ST") {
					saltos += 5;
				}


				/*var contenedorX = [];
				var cantiX = 1;

				for (var x = 0; x < data[i].CONTEN.trim().length; x++) {
					contenedorX[x] = data[i].CONTEN.charAt(x);
					var textoX = doc.getTextWidth(contenedorX.join(''));
					
					if (textoX >= 175.7891666666665) {						
						contenedorX = [];
						cantiX++;						
						textoX -= textoX;					
					}
				}*/


				//var canti = parseInt(Math.floor(data[i].CONT.trim().length*3.22/((setLargo-5))));
				//var canti = Math.floor(doc.getStringUnitWidth(data[i].CONT.trim()))/((setLargo)/6.8);
				//var canti = doc.getTextWidth(data[i].CONT.trim())*1.9/((setLargo-5));
				//var canti = doc.getTextWidth(data[i].CONT.trim())/(setLargo-5);
				//var canti = Math.floor(doc.getTextWidth(data[i].CONT.trim()))/((setLargo));
				var canti = Math.floor(doc.getStringUnitWidth(data[i].CONTEN.trim())+4.8)/((setLargo)/6.4);
				canti += 1;
				//saltos += 8;
				//console.log(cantiX);
				//var lines =doc.splitTextToSize(data[i].CONT.trim(), 180);
				//doc.text(porct(margenIzq+margVinet+margCaja),porct(margenSup+saltos-posX-posX2),lines);
				if(data[i].TIPCMP.trim() == "ST"){
								
					setAll(data[i],saltos);
					doc.text(data[i].CONTEN.trim(), porct((widthP)), porct(margenSup+saltos-posX-posX2),{maxWidth: porct(setLargo), align: "center"});

				} else {

					doc.text(data[i].CONTEN.trim(), porct(margenIzq+margVinet+margCaja), porct(margenSup+saltos-posX-posX2),{maxWidth: porct(setLargo-5), align: "justify"});
					//doc.text(data[i].CONTEN.trim(), porct(margenIzq+margVinet+margCaja), porct(margenSup+saltos-posX-posX2),{maxWidth: porct(setLargo+5), align: "justify"});

				}
				for (var k = 1; k <= canti; k++) {
					//contenedor[k] = data[i].CONT.trim();
					//alert(k);
					saltos += 9*data[i].LETTAM*0.125;

					//saltos += 9;
					
				}

				if (data[i].TIPCMP.toUpperCase().trim()=="TB" || data[i].TIPCMP.toUpperCase().trim()=="ST") {
					saltos += 3;
				}

				//alert(data[data.length-1].CONT.trim());
				/*if (data[data.length-1]) { 
					alert("asdad")
					saltos -= 8; 
				}*/
				
			}

			if( i==data.length-restaUltimoSalto ){ saltos -= 14; }

			//alert("Actual: "+porct(margenSup+saltos-posX-posX2)+", Max: 245 \nSaltos: "+saltos);



			if(porct(margenSup+saltos-posX-posX2) > 260){
				
				doc.addPage();
				posX = porct(margenSup+saltos);
				posX2 = 260+posX2-40;
				//suma = parseInt(posX) + parseInt(posX2);
				//alert("Este es posX: "+posX+"; este es posX2: "+posX2+"; Suma: "+suma);
				if (tienePimg==1) { 
					piePImg(); 
				}
				if (tienePtxt==1) { 
					piePCod(txtCF, dataCF);
				}

			}


			/*if (data[i].CAMP == "NEW") {

				doc.setProperties({
				    title: 'Estado de Cuenta',
				    //subject: 'Info about PDF',
				    //author: 'PDFAuthor',
				    //keywords: 'generated, javascript, web 2.0, ajax',
				    //creator: 'My Company'
				});
				//data.splice(0,-7);
				
			
				doc.save('Test.pdf');
				//doc.output('datauri');  
				//doc.output('dataurlnewwindow');  


			}*/



		}
		

//
}